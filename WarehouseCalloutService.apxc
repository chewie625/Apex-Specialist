public with sharing class WarehouseCalloutService implements Queueable, Database.AllowsCallouts{
    
    private static final String WAREHOUSE_URL = 'https://th-superbadge-apex.herokuapp.com/equipment';
    private HttpResponse response;
    List<Product2> NewEquipmentList = new List<Product2>();
    
    public void execute(QueueableContext context) {
        Http http = new Http();
        HttpRequest request = new HttpRequest();
        request.setEndpoint(WAREHOUSE_URL);
        request.setMethod('GET');
        request.setHeader('Content-Type', 'application/json');
        this.response = http.send(request);
        if (this.response.getStatusCode() == 200){
            // Deserialize JSON response
            List<Object> equipmentList = (List<Object>) JSON.deserializeUntyped(this.response.getBody());
            // Perform upsert operation
            //upsert NewEquipmentList;
            //System.debug('Equipment records upserted successfully from external service.');
            // check upserting at https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/langCon_apex_dml_examples_upsert.htm
            for(Object equipment: equipmentList) {
                Map<String,Object> res = (Map<String,Object>) equipment;
                NewEquipmentList.add(new Product2(Name = (String) res.get('name'),
                                                  Replacement_Part__c = True,
                                                  Cost__c= (Decimal) res.get('cost'),
                                                  Current_Inventory__c= (Integer) res.get('quantity'),
                                                  Lifespan_Months__c= (Integer) res.get('lifespan'),
                                                  Maintenance_Cycle__c= (Integer) res.get('maintenanceperiod'),
                                                  Warehouse_SKU__c=(String) res.get('sku')));
                
            }
            upsert NewEquipmentList;
        }
    }
    public HttpResponse getResponse() {
        return this.response;
    }
}